var plt=function(n){var t={};function e(r){if(t[r])return t[r].exports;var c=t[r]={i:r,l:!1,exports:{}};return n[r].call(c.exports,c,c.exports,e),c.l=!0,c.exports}return e.m=n,e.c=t,e.d=function(n,t,r){e.o(n,t)||Object.defineProperty(n,t,{enumerable:!0,get:r})},e.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},e.t=function(n,t){if(1&t&&(n=e(n)),8&t)return n;if(4&t&&"object"==typeof n&&n&&n.__esModule)return n;var r=Object.create(null);if(e.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:n}),2&t&&"string"!=typeof n)for(var c in n)e.d(r,c,function(t){return n[t]}.bind(null,c));return r},e.n=function(n){var t=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(t,"a",t),t},e.o=function(n,t){return Object.prototype.hasOwnProperty.call(n,t)},e.p="",e(e.s=0)}([function(n,t,e){"use strict";e.r(t),e.d(t,"Axes2D",(function(){return c})),e.d(t,"Axes3D",(function(){return o})),e.d(t,"NumberPlane",(function(){return u})),e.d(t,"ComplexPlane",(function(){return s})),e.d(t,"Line2D",(function(){return i})),e.d(t,"Arrow2D",(function(){return a})),e.d(t,"Vector2D",(function(){return l})),e.d(t,"DoubleArrow2D",(function(){return f})),e.d(t,"Line3D",(function(){return d})),e.d(t,"Arrow3D",(function(){return p})),e.d(t,"Vector3D",(function(){return b})),e.d(t,"DoubleArrow3D",(function(){return x})),e.d(t,"Surface2D",(function(){return D})),e.d(t,"Surface3D",(function(){return m})),e.d(t,"Volume",(function(){return y})),e.d(t,"NumberLine2D",(function(){return v})),e.d(t,"NumberLine3D",(function(){return I})),e.d(t,"Plot2D",(function(){return P})),e.d(t,"Plot3D",(function(){return g})),e.d(t,"p5Utils",(function(){return h}));class r{constructor(){}}class c extends r{}class o extends r{}class u extends r{}class s extends u{}class i{constructor(){}}class a extends i{}class l extends a{}class f extends a{}class d{constructor(){}}class p extends d{}class b extends p{}class x extends p{}class D{constructor(){}}class m{constructor(){}}class y{constructor(){}}class v{constructor(){}}class I{constructor(){}}class P{constructor(){}}class g{constructor(){}}var h=new class{constructor(){this.p5Instance=window}setP5Instance(n){this.p5Instance=n}checkP5(){return void 0!==this.p5Instance&&"function"==typeof this.p5Instance.loadImage||void 0!==this.p5Instance.p5&&void 0!==this.p5Instance.p5.Image&&"function"==typeof this.p5Instance.p5.Image}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,